{"version":3,"sources":["views/FinalImplementacion/Fibonacci.js","../node_modules/reactstrap/es/Card.js"],"names":["Factorial","useState","respuesta","setRespuesta","exito","setExito","error","setError","mensajeError","setMensajeError","valorserie","setValorserie","enviarDatos","a","axios","get","parseInt","then","res","data","catch","err","className","tag","id","placeholder","style","width","onChange","e","target","value","replace","color","size","onClick","isNaN","parseFloat","propTypes","tagPropType","inverse","PropTypes","bool","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps"],"mappings":"4TAmFeA,UA7EG,WAEhB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,uCAAG,sBAAAC,EAAA,sEAEZC,IAAMC,IAAN,2FAA8FC,SAASN,KAC1GO,MAAK,SAACC,GACLX,GAAS,GACTF,GAAS,GACTF,EAAae,EAAIC,SAChBC,OAAM,SAACC,GACRZ,EAAgB,gBAChBF,GAAS,GACTF,GAAS,MAVK,2CAAH,qDAwCjB,OACE,cAAC,WAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAYiB,UAAU,gFAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,sCACA,qBAAKD,UAAU,2BAGjB,eAAC,IAAD,WACE,sBACA,wFACA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOE,GAAG,QAAQC,YAAa,YAAaC,MAAO,CAAEC,MAAO,QAAUC,SAAU,SAACC,GAAQlB,EAAckB,EAAEC,OAAOC,MAAMC,QAAQ,IAAK,OAAnI,iBACF,cAAC,IAAD,UACE,cAAC,IAAD,CAAQR,GAAG,SAAUS,MAAM,UAAUC,KAAK,KAAKC,QAAS,WAzC9DC,MAAM1B,IACRD,EAAgB,mBAChBF,GAAS,GACTF,GAAS,IAEAgC,WAAW3B,GAAc,IAAM,GACxCD,EAAgB,gBAChBF,GAAS,GACTF,GAAS,IAEAW,SAASN,GAAc,KAChCD,EAAgB,8BAChBF,GAAS,GACTF,GAAS,IAEAW,SAASN,GAAc,GAChCD,EAAgB,wBAChBF,GAAS,GACTF,GAAS,KAGTI,EAAgB,IAChBF,GAAS,GACTK,MAkBQ,4BAGJ,sBACEN,EAAS,qBAAIgB,UAAU,cAAd,oBAAoCd,KAAqB,GAClEJ,EAAS,gCAAK,oBAAIkB,UAAU,eAAd,iCACd,oBAAIE,GAAI,WAAR,SAAqBtB,OAAwB,a,iCC7EzD,6EAMIoC,EAAY,CACdf,IAAKgB,cACLC,QAASC,IAAUC,KACnBT,MAAOQ,IAAUE,OACjBC,KAAMH,IAAUC,KAChBG,QAASJ,IAAUC,KACnBpB,UAAWmB,IAAUE,OACrBG,UAAWL,IAAUM,OACrBC,SAAUP,IAAUQ,UAAU,CAACR,IAAUM,OAAQN,IAAUE,OAAQF,IAAUS,QAM3EC,EAAO,SAAcC,GACvB,IAAI9B,EAAY8B,EAAM9B,UAClBwB,EAAYM,EAAMN,UAClBb,EAAQmB,EAAMnB,MACdW,EAAOQ,EAAMR,KACbJ,EAAUY,EAAMZ,QAChBK,EAAUO,EAAMP,QAChBQ,EAAMD,EAAM7B,IACZyB,EAAWI,EAAMJ,SACjBM,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,aAE3HI,EAAUC,0BAAgBC,IAAWpC,EAAW,SAAQkB,GAAU,eAAsBI,GAAO,cAAqBX,IAASY,EAAU,SAAW,MAAQ,IAAMZ,GAAgBa,GACpL,OAAoBa,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEhC,UAAWkC,EACXM,IAAKd,MAITG,EAAKb,UAAYA,EACjBa,EAAKY,aAvBc,CACjBxC,IAAK,OAuBQ4B","file":"static/js/177.c8435750.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport { Button, Card, Row, Col, CardHeader, Input } from 'reactstrap'\r\nimport CardTitle from 'reactstrap/lib/CardTitle'\r\nimport CardBody from 'reactstrap/lib/CardBody'\r\nimport axios from 'axios'\r\n\r\nconst Factorial = () => {\r\n\r\n  const [respuesta, setRespuesta] = useState(\"\")\r\n  const [exito, setExito] = useState(false)\r\n\r\n  const [error, setError] = useState(false)\r\n  const [mensajeError, setMensajeError] = useState(\"\")\r\n\r\n  const [valorserie, setValorserie] = useState(\"\")\r\n\r\n  const enviarDatos = async () => {\r\n\r\n    await axios.get(`https://backfinalimplementacion.herokuapp.com/fibonacci/sucesionNumerosFibonacci/${parseInt(valorserie)}`)\r\n      .then((res) => {\r\n        setError(false)\r\n        setExito(true)\r\n        setRespuesta(res.data)\r\n      }).catch((err) => {\r\n        setMensajeError(\"Error de red\")\r\n        setError(true)\r\n        setExito(false)\r\n      })\r\n  }\r\n  const verificardatos = () => {\r\n    if (isNaN(valorserie)) {\r\n      setMensajeError(\"No es número\")\r\n      setError(true)\r\n      setExito(false)\r\n\r\n    } else if (parseFloat(valorserie) % 1 !== 0) {\r\n      setMensajeError(\"No es entero\")\r\n      setError(true)\r\n      setExito(false)\r\n\r\n    } else if (parseInt(valorserie) > 1000) {\r\n      setMensajeError(\"Es muy grande el número\")\r\n      setError(true)\r\n      setExito(false)\r\n\r\n    } else if (parseInt(valorserie) < 1) {\r\n      setMensajeError(\"Valor muy pequeño\")\r\n      setError(true)\r\n      setExito(false)\r\n\r\n    } else {\r\n      setMensajeError(\"\")\r\n      setError(false)\r\n      enviarDatos()\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\r\n          <CardTitle tag='h4'>Sucesión de Fibonacci</CardTitle>\r\n          <div className='d-flex mt-md-0 mt-1'>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody >\r\n          <p></p>\r\n          <h5>Digite cuantos números de la sucesión desea ver:</h5>\r\n          <Row>\r\n            <Col>\r\n              <Input id=\"input\" placeholder={\"Fibonacci\"} style={{ width: \"100%\" }} onChange={(e) => { setValorserie(e.target.value.replace(\",\", \".\")) }}> </Input></Col>\r\n            <Col>\r\n              <Button id=\"button\"  color=\"primary\" size=\"md\" onClick={() => { verificardatos() }}> Calcular</Button>\r\n            </Col>\r\n          </Row>\r\n          <p></p>\r\n          {(error) ? <h5 className=\"text-danger\">Error: {mensajeError}</h5> : \"\"}\r\n          {(exito) ? <div><h5 className=\"text-success\">La sucesión es: </h5 >\r\n            <h5 id =\"response\" >{respuesta}</h5></div> : \"\"}\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Factorial\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}