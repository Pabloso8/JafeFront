{"version":3,"sources":["views/FinalImplementacion/Cuadrado.js","../node_modules/reactstrap/es/Card.js"],"names":["Cuadrado","useState","respuesta","setRespuesta","exito","setExito","error","setError","mensajeError","setMensajeError","valorLado1","setValorLado1","valorLado2","setValorLado2","enviarDatos","a","body","lado1","parseFloat","lado2","axios","get","parseInt","then","res","console","log","data","catch","err","className","tag","id","placeholder","style","width","onChange","e","target","value","replace","color","size","onClick","isNaN","perimetroRec","areaRec","propTypes","tagPropType","inverse","PropTypes","bool","string","outline","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps"],"mappings":"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","file":"static/js/175.f29c5374.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport { Button, Card, Row, Col, CardHeader, Input } from 'reactstrap'\r\nimport CardTitle from 'reactstrap/lib/CardTitle'\r\nimport CardBody from 'reactstrap/lib/CardBody'\r\nimport axios from 'axios'\r\n\r\nconst Cuadrado = () => {\r\n\r\n    const [respuesta, setRespuesta] = useState(\"\")\r\n    const [exito, setExito] = useState(false)\r\n\r\n    const [error, setError] = useState(false)\r\n    const [mensajeError, setMensajeError] = useState(\"\")\r\n\r\n    const [valorLado1, setValorLado1] = useState(\"\")\r\n    const [valorLado2, setValorLado2] = useState(\"\")\r\n\r\n    const enviarDatos = async () => {\r\n\r\n        const body = {\r\n            lado1: parseFloat(valorLado1),\r\n            lado2: parseFloat(valorLado2)\r\n        }\r\n        await axios.get(`https://backfinalimplementacion.herokuapp.com/rectangulo/rectangulo/${parseInt(valorLado1)}/${parseInt(valorLado2)}`, body)\r\n            .then((res) => {\r\n\r\n                setError(false)\r\n                setExito(true)\r\n                console.log(res)\r\n                setRespuesta(res.data)\r\n            }).catch((err) => {\r\n                setMensajeError(\"Error de red\")\r\n                setError(true)\r\n                setExito(false)\r\n            })\r\n    }\r\n    const verificardatos = (lado1, lado2) => {\r\n        if (isNaN(lado1) || isNaN(lado2)  || isNaN(parseFloat(lado1)) || isNaN(parseFloat(lado2))) {\r\n            setMensajeError(\"Algún dato no es número\")\r\n            setError(true)\r\n            setExito(false)\r\n\r\n        } else if (lado1 === \"\" || lado2 === \"\") {\r\n            setMensajeError(\"Algún dato falta\")\r\n            setError(true)\r\n            setExito(false)\r\n\r\n        } else if (parseFloat(lado1) <= 0 || parseFloat(lado2) <= 0) {\r\n            setMensajeError(\"Algún dato es muy pequeño\")\r\n            setError(true)\r\n            setExito(false)\r\n\r\n        } else if (parseFloat(lado1) > 10000000 || parseFloat(lado2) > 10000000) {\r\n            setMensajeError(\"Algún dato es muy grande\")\r\n            setError(true)\r\n            setExito(false)\r\n\r\n        } else {\r\n            setMensajeError(\"\")\r\n            setError(false)\r\n            enviarDatos()\r\n            // console.log(valorserie)\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Card>\r\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\r\n                    <CardTitle tag='h4'>Área y perímetro de un rectángulo</CardTitle>\r\n                    <div className='d-flex mt-md-0 mt-1'>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardBody >\r\n                    <p></p>\r\n                    <h5>Digite los valores del rectángulo::</h5>\r\n                    <Row>\r\n                        <Col>\r\n                            <Input id=\"input1\" placeholder={\"Altura\"} style={{ width: \"100%\" }} onChange={(e) => { setValorLado1(e.target.value.replace(\",\", \".\")) }}> </Input></Col>\r\n                        <Col>\r\n                            <Input  id=\"input2\" placeholder={\"Base\"} style={{ width: \"100%\" }} onChange={(e) => { setValorLado2(e.target.value.replace(\",\", \".\")) }}> </Input></Col>\r\n                        \r\n                        <Col>\r\n                            <Button  id=\"button\" color=\"primary\" size=\"md\" onClick={() => { verificardatos(valorLado1, valorLado2) }}> Calcular</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <p></p>\r\n                    {(error) ? <h5 className=\"text-danger\">Error: {mensajeError}</h5> : \"\"}\r\n                    {(exito) ? <div><h5 className=\"text-success\">La resultado es: </h5 >\r\n                    <p></p>  <h5  id=\"response1\"> Perímetro: {respuesta.perimetroRec}</h5> <p></p> <h5  id=\"response2\" > Área: {respuesta.areaRec}</h5> </div> : \"\"}\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Cuadrado\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}