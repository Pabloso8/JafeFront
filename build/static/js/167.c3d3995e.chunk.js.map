{"version":3,"sources":["views/Implementacion/PersonJafe.js","@core/components/breadcrumbs/index.js"],"names":["UserList","useHistory","useState","data1","setData1","text1","setText1","text2","setText2","text3","setText3","text4","setText4","setText5","mensajeError","setMensajeError","isLoading","setIsLoading","modal","setModal","handleModal","refreshTable","setRefreshTable","useEffect","fetch","headers","Accept","method","then","res","json","data","console","log","datos","i","length","push","documento","document","lastName","name","secondaryName","catch","error","CrearUnRegistro","a","body","axios","post","err","class","role","breadCrumbTitle","breadCrumbParent","className","tag","id","color","onClick","size","title","noHeader","highlightOnHover","striped","search","style","overflow","theme","columns","selector","sortable","minWidth","sortIcon","isOpen","toggle","for","onChange","e","target","value","type","placeholder","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","to"],"mappings":"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","file":"static/js/167.c3d3995e.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Button, Card, Row, Col, CardHeader, Modal, ModalHeader, ModalBody, ModalFooter, Label, FormGroup, Input, Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport DataTable from 'react-data-table-component'\r\n\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport { ChevronDown, Edit, Plus, MoreVertical, FileText, Archive, Trash } from 'react-feather'\r\nimport Avatar from '@components/avatar'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport CardTitle from 'reactstrap/lib/CardTitle'\r\nimport CardBody from 'reactstrap/lib/CardBody'\r\nimport axios from 'axios'\r\n\r\nconst UserList = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [data1, setData1] = useState([])\r\n    const [text1, setText1] = useState(\"\")\r\n    const [text2, setText2] = useState(\"\")\r\n    const [text3, setText3] = useState(\"\")\r\n    const [text4, setText4] = useState(\"\")\r\n    const [text5, setText5] = useState(\"\")\r\n    const [mensajeError, setMensajeError] = useState(\"\")\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [usuarios, setUsuarios] = useState(1)\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const handleModal = () => setModal(!modal)\r\n\r\n\r\n    const [refreshTable, setRefreshTable] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"https://backmotos.herokuapp.com/person2\", {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"get\"\r\n        }).then((res) => res.json()).then(data => {\r\n            console.log(\"personas\")\r\n\r\n            console.log(data)\r\n            const datos = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                    datos.push({ documento: data[i].document, lastName: data[i].lastName, name: data[i].name, secondaryName: data[i].secondaryName })\r\n            }\r\n            console.log(\"sadasd\")\r\n            console.log(data)\r\n            console.log(\"sadasd\")\r\n            console.log(datos)\r\n            setData1(datos)\r\n            setIsLoading(false)\r\n\r\n        })\r\n            .catch((error) => {\r\n                console.error(error)\r\n                setData1([])\r\n                setIsLoading(false)\r\n            })\r\n\r\n        // fetch(`https://reqres.in/api/users?page=${usuarios}`, {\r\n        //     method: 'GET'\r\n        // })\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         console.log(data.data[0])\r\n        //         setData1(data.data)\r\n        //         setIsLoading(false)\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.error(error)\r\n        //         setData1([])\r\n        //         setIsLoading(false)\r\n        //     })\r\n    }, [refreshTable])\r\n\r\n    const CrearUnRegistro = async () => {\r\n        \r\n\r\n        const body = {\r\n            document: text4.text4,\r\n            name: text1.text1,\r\n            secondaryName: text2.text2,\r\n            lastName: text3.text3\r\n        }\r\n\r\n        console.log(body)\r\n        await axios.post(\"https://backmotos.herokuapp.com/person\", body)\r\n            .then((res) => {\r\n                console.log(res)\r\n                // setMensajeError(\"Placa ya en uso.\")\r\n                setRefreshTable(!refreshTable)\r\n                setText1(\"\")\r\n                setText2(\"\")\r\n                setText3(\"\")\r\n                setText4(\"\")\r\n                setText5(\"\")\r\n                setMensajeError(\"\")\r\n        \r\n                handleModal()\r\n            \r\n            }).catch((err) => {\r\n                setMensajeError(\"CÃ©dula ya tomada o input incorrecto.\")\r\n            })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Documento',\r\n            selector: 'documento',\r\n            sortable: true,\r\n            minWidth: '250px'\r\n        },\r\n        {\r\n            name: 'Nombre',\r\n            selector: 'name',\r\n            sortable: true,\r\n            minWidth: '150px'\r\n        },\r\n        {\r\n            name: 'Segundo Nombre',\r\n            selector: 'secondaryName',\r\n            sortable: true,\r\n            minWidth: '150px'\r\n        },\r\n        {\r\n            name: 'Apellido',\r\n            selector: 'lastName',\r\n            sortable: true,\r\n            minWidth: '150px'\r\n        }\r\n    ]\r\n\r\n    return isLoading ? (\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>) : (\r\n\r\n        <Fragment>\r\n            <BreadCrumbs breadCrumbTitle='Admon' breadCrumbParent='Admon' />\r\n\r\n            <Card>\r\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\r\n                    <CardTitle tag='h4'>Personas Registradas</CardTitle>\r\n                    \r\n                    <div className='d-flex mt-md-0 mt-1'>\r\n\r\n                        <Button id = \"botonadmon\" className='ml-2' color='primary' onClick={handleModal}>\r\n                            <Plus size={15} />\r\n                            <span className='align-middle ml-50'>Nueva Persona</span>\r\n                        </Button>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardBody >\r\n\r\n\r\n                    <DataTable\r\n                        title=\" asdasd\"\r\n                        noHeader\r\n                        highlightOnHover\r\n                        striped\r\n                        search\r\n                        style={{ overflow: \"visible\" }}\r\n                        theme='light'\r\n                        data={data1}\r\n                        columns={columns}\r\n                        className='react-dataTable'\r\n                        sortIcon={<ChevronDown size={10} />}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={() => handleModal()}\r\n                className='modal-dialog-centered'\r\n                // modalClassName={item.modalColor}\r\n                key=\"asdasd\"\r\n            >\r\n                <ModalHeader toggle={() => handleModal()}>Crear Nuevo Registro</ModalHeader>\r\n                <ModalBody>\r\n                    <FormGroup>\r\n                        <Label for='text'>Primer Nombre:</Label>\r\n                        <Input onChange={e => setText1({ text1: e.target.value })} type='text' id='text' placeholder='Primer Nombre' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='text'>Segundo Nombre:</Label>\r\n                        <Input onChange={e => setText2({ text2: e.target.value })} type='text' id='text1' placeholder='Segundo Nombre' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='text'>Apellido:</Label>\r\n                        <Input onChange={e => setText3({ text3: e.target.value })} type='text' id='text4' placeholder='Apellido' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='text'>CÃ©dula:</Label>\r\n                        <Input onChange={e => setText4({ text4: e.target.value })} type='text' id='text2' placeholder='CÃ©dula' />\r\n                    </FormGroup>\r\n                    {/* <FormGroup>\r\n                        <Label for='text'>Placa:</Label>\r\n                        <Input onChange={e => setText5({ text5: e.target.value })} type='text' id='text3' placeholder='Placa' />\r\n                    </FormGroup> */}\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <h6 className=\"text-danger\" id=\"mensajeError\"> {mensajeError} </h6>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button color='primary' onClick={() => handleModal()}>\r\n                                Cancelar\r\n                            </Button></Col>\r\n                        <Col>\r\n                            <Button id = \"pruebasss\" color='primary' onClick={async () => {\r\n                                CrearUnRegistro()\r\n                            }}>\r\n                                Crear\r\n                            </Button></Col>\r\n\r\n\r\n                    </Row>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <h1></h1>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default UserList\r\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {/* {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )} */}\n                {/* {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )} */}\n                {/* <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem> */}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div> */}\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}