{"version":3,"sources":["views/Implementacion/InventarioJafe.js","@core/components/breadcrumbs/index.js"],"names":["DataTableWithButtons","useState","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","data","setData","isLoading","setIsLoading","multiLingColumns","name","selector","sortable","minWidth","cell","row","id","Id","Producto","useEffect","a","fetch","then","response","json","console","log","Products","catch","error","Previous","className","Next","class","role","breadCrumbTitle","breadCrumbParent","tag","md","sm","for","type","bsSize","value","onChange","e","target","updatedData","length","filter","item","startsWith","Cantidad","toString","toLowerCase","Precio","includes","noHeader","pagination","selectableRowsNoSelectAll","columns","paginationPerPage","sortIcon","size","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","to"],"mappings":"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","file":"static/js/169.ba5e461d.chunk.js","sourcesContent":["// ** React Imports\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, CardHeader, CardTitle, CardFooter, CardText, Input, Label, Row, Col } from 'reactstrap'\r\n\r\nconst DataTableWithButtons = () => {\r\n    // ** State\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n\r\n    const multiLingColumns = [\r\n        {\r\n            name: 'Producto',\r\n            selector: 'Producto',\r\n            sortable: true,\r\n            minWidth: '250px',\r\n            cell: row => {\r\n                return (\r\n                    <div key={row.Id} id={row.Id}> {row.Producto} </div>\r\n                )\r\n\r\n\r\n            }\r\n        },\r\n        {\r\n            name: 'Precio',\r\n            selector: 'Precio',\r\n            sortable: true,\r\n            minWidth: '250px'\r\n        },\r\n        {\r\n            name: 'Cantidad',\r\n            selector: 'Cantidad',\r\n            sortable: true,\r\n            minWidth: '250px'\r\n        }\r\n    ]\r\n\r\n    useEffect(async () => {\r\n\r\n        // const response = await axios.get('https://inventorywebservices.herokuapp.com/webService/inventarioDisp.json?user=a')\r\n        // console.log(response)\r\n        await fetch(\"https://inventorywebservices.herokuapp.com/webService/inventarioDisp.json?user=045c3b0ad714ff7167fb38fe4ff7b1fb13cba8893df962d4caeb04ebfeded7f5\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.Products)\r\n                setData(data.Products)\r\n                setIsLoading(false)\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"aasdasd\")\r\n\r\n                console.error(error)\r\n                setData([])\r\n                setIsLoading(false)\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    // ** Function to handle pagination\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n\r\n    // ** Function to handle filter\r\n    const handleFilter = e => {\r\n        const value = e.target.value\r\n        let updatedData = []\r\n        setSearchValue(value)\r\n\r\n        console.log(\"asdasd\")\r\n        console.log(data.length)\r\n        if (value.length) {\r\n            updatedData = data.filter(item => {\r\n                console.log(\"asdasd\")\r\n\r\n                console.log(item)\r\n                const startsWith =\r\n                    item.Cantidad.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.Producto.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.Precio.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                const includes =\r\n                    item.Cantidad.toString().toLowerCase().includes(value.toLowerCase()) ||\r\n                    item.Producto.toString().toLowerCase().includes(value.toLowerCase()) ||\r\n                    item.Precio.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWith) {\r\n                    return startsWith\r\n                } else if (!startsWith && includes) {\r\n                    return includes\r\n                } else return null\r\n            })\r\n            setFilteredData(updatedData)\r\n            setSearchValue(value)\r\n        }\r\n    }\r\n\r\n    // ** Pagination Previous Component\r\n    const Previous = () => {\r\n        return (\r\n            <Fragment>\r\n                <span className='align-middle d-none d-md-inline-block'>\r\n                    <FormattedMessage id='Prev' />\r\n                </span>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    // ** Pagination Next Component\r\n    const Next = () => {\r\n        return (\r\n            <Fragment>\r\n                <span className='align-middle d-none d-md-inline-block'>\r\n                    <FormattedMessage id='Next' />\r\n                </span>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    // ** Custom Pagination Component\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel={<Previous size={15} />}\r\n            nextLabel={<Next size={15} />}\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\r\n            breakLabel={'...'}\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName={'active'}\r\n            pageClassName={'page-item'}\r\n            nextLinkClassName={'page-link'}\r\n            nextClassName={'page-item next'}\r\n            previousClassName={'page-item prev'}\r\n            previousLinkClassName={'page-link'}\r\n            pageLinkClassName={'page-link'}\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            containerClassName={'pagination react-paginate pagination-sm justify-content-end pr-1 mt-1'}\r\n        />\r\n    )\r\n\r\n    return isLoading ? (\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>) : (<div>\r\n            <BreadCrumbs breadCrumbTitle='Admon' breadCrumbParent='Admon' />\r\n\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Inventario Registrado</CardTitle>\r\n                </CardHeader>\r\n                <Row className='justify-content-end mx-0'>\r\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\r\n                        <Label className='mr-1' for='search-input-1'>\r\n                            <FormattedMessage id='Search' />\r\n                        </Label>\r\n                        <Input\r\n                            className='dataTable-filter mb-50'\r\n                            type='text'\r\n                            bsSize='sm'\r\n                            id='search-input-1'\r\n                            value={searchValue}\r\n                            onChange={handleFilter}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <DataTable\r\n                    noHeader\r\n                    pagination\r\n                    selectableRowsNoSelectAll\r\n                    columns={multiLingColumns}\r\n                    className='react-dataTable'\r\n                    paginationPerPage={7}\r\n                    sortIcon={<ChevronDown size={10} />}\r\n                    paginationDefaultPage={currentPage + 1}\r\n                    paginationComponent={CustomPagination}\r\n                    data={searchValue.length ? filteredData : data}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTableWithButtons\r\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {/* {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )} */}\n                {/* {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )} */}\n                {/* <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem> */}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div> */}\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}