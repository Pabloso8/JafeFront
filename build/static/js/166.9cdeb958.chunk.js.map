{"version":3,"sources":["views/Implementacion/AdmonJafe.js","@core/components/breadcrumbs/index.js"],"names":["UserList","useHistory","useState","data1","setData1","setText1","setText2","setText3","text4","setText4","text5","setText5","mensajeError","setMensajeError","isLoading","setIsLoading","modal","setModal","handleModal","refreshTable","setRefreshTable","useEffect","fetch","headers","Accept","method","then","res","json","data","datos","i","length","k","vehicles","push","dueno","name","apellido","lastName","documento","document","placa","plate","estado","state","console","log","catch","error","CrearUnRegistro","a","body","axios","post","err","CambiarEstado","id","columns","selector","sortable","minWidth","cell","row","color","pill","allowOverflow","className","tag","size","right","onClick","class","role","breadCrumbTitle","breadCrumbParent","title","noHeader","highlightOnHover","striped","search","style","overflow","theme","sortIcon","isOpen","toggle","for","onChange","e","target","value","type","placeholder","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","to"],"mappings":"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","file":"static/js/166.9cdeb958.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Button, Card, Row, Col, CardHeader, Modal, ModalHeader, ModalBody, ModalFooter, Label, FormGroup, Input, Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport DataTable from 'react-data-table-component'\r\n\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport { ChevronDown, Edit, Plus, MoreVertical, FileText, Archive, Trash } from 'react-feather'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport CardTitle from 'reactstrap/lib/CardTitle'\r\nimport CardBody from 'reactstrap/lib/CardBody'\r\nimport axios from 'axios'\r\n\r\nconst UserList = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [data1, setData1] = useState([])\r\n    const [text1, setText1] = useState(\"\")\r\n    const [text2, setText2] = useState(\"\")\r\n    const [text3, setText3] = useState(\"\")\r\n    const [text4, setText4] = useState(\"\")\r\n    const [text5, setText5] = useState(\"\")\r\n    const [mensajeError, setMensajeError] = useState(\"\")\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [usuarios, setUsuarios] = useState(1)\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const handleModal = () => setModal(!modal)\r\n\r\n\r\n    const [refreshTable, setRefreshTable] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"https://backmotos.herokuapp.com/person2\", {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"get\"\r\n        }).then((res) => res.json()).then(data => {\r\n            const datos = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                for (let k = 0; k < data[i].vehicles.length; k++) {\r\n                    datos.push({ dueno: data[i].name, apellido: data[i].lastName, documento: data[i].document, placa: data[i].vehicles[k].plate, estado: data[i].vehicles[k].state })\r\n                }\r\n            }\r\n            console.log(\"sadasd\")\r\n            console.log(data)\r\n            console.log(\"sadasd\")\r\n            console.log(datos)\r\n            setData1(datos)\r\n            setIsLoading(false)\r\n\r\n        })\r\n            .catch((error) => {\r\n                console.error(error)\r\n                setData1([])\r\n                setIsLoading(false)\r\n            })\r\n\r\n    }, [refreshTable])\r\n\r\n    const CrearUnRegistro = async () => {\r\n\r\n        const body = {\r\n            document: text4.text4,\r\n            // name: text1.text1,\r\n            // secondaryName: text2.text2,\r\n            // lastName: text3.text3,\r\n            plate: text5.text5\r\n        }\r\n        console.log(body)\r\n        await axios.post(\"https://backmotos.herokuapp.com/vehicle\", body)\r\n            .then((res) => {\r\n                console.log(res)\r\n                // setMensajeError(\"Placa ya en uso.\")\r\n                setRefreshTable(!refreshTable)\r\n                setText1(\"\")\r\n                setText2(\"\")\r\n                setText3(\"\")\r\n                setText4(\"\")\r\n                setText5(\"\")\r\n                setMensajeError(\"\")\r\n        \r\n                handleModal()\r\n            \r\n            }).catch((err) => {\r\n                setMensajeError(\"Placa ya en uso o persona no existe.\")\r\n            })\r\n    }\r\n\r\n    const CambiarEstado = async (id, estado) => {\r\n        console.log(\"Cambiar estao\")\r\n\r\n        const body = {\r\n            plate: id,\r\n            state: estado\r\n        }\r\n        console.log(body)\r\n        await axios.post(\"https://backmotos.herokuapp.com/vehicle/changeVehicle\", body).then((res) => {\r\n            console.log(res)\r\n            setRefreshTable(!refreshTable)\r\n        })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Nombre',\r\n            selector: 'dueno',\r\n            sortable: true,\r\n            minWidth: '250px'\r\n        },\r\n        {\r\n            name: 'Apellido',\r\n            selector: 'apellido',\r\n            sortable: true,\r\n            minWidth: '150px'\r\n        },\r\n        {\r\n            name: 'Documento',\r\n            selector: 'documento',\r\n            sortable: true,\r\n            minWidth: '150px'\r\n        },\r\n        {\r\n            name: 'Placa',\r\n            selector: 'placa',\r\n            sortable: true,\r\n            minWidth: '150px'\r\n        },\r\n\r\n        {\r\n            name: 'Estado',\r\n            selector: 'email',\r\n            sortable: true,\r\n            minWidth: '150px',\r\n            cell: row => {\r\n                if (row.estado === \"En Revisión\") {\r\n                    return (\r\n                        <Badge color=\"primary\" pill>\r\n                            {row.estado}\r\n                        </Badge>\r\n                    )\r\n                } else if (row.estado === \"En Reparación\") {\r\n                    return (\r\n                        <Badge color=\"warning\" pill>\r\n                            {row.estado}\r\n                        </Badge>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Badge color=\"success\" pill>\r\n                            {row.estado}\r\n                        </Badge>\r\n                    )\r\n                }\r\n            }\r\n\r\n        },\r\n        {\r\n            name: 'Editar',\r\n            allowOverflow: true,\r\n            cell: row => {\r\n                return (\r\n                    <div className='d-flex '>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle className='pr-1' tag='span'>\r\n                                <MoreVertical size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem className='w-100'\r\n                                    onClick={async () => {\r\n                                        CambiarEstado(row.placa, \"En Revisión\")\r\n                                    }}\r\n                                >\r\n                                    <FileText size={15} />\r\n                                    <span className='align-middle ml-50'>En revisión</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem className='w-100'\r\n                                    onClick={async () => {\r\n                                        CambiarEstado(row.placa, \"En Reparación\")\r\n                                    }}\r\n                                >\r\n                                    <Archive size={15} />\r\n                                    <span className='align-middle ml-50'>En reparación</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem className='w-100'\r\n                                    onClick={async () => {\r\n                                        CambiarEstado(row.placa, \"Para Entregar\")\r\n                                    }}\r\n                                >\r\n                                    <Trash size={15} />\r\n                                    <span className='align-middle ml-50'>Para Entregar</span>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    return isLoading ? (\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>) : (\r\n\r\n        <Fragment>\r\n            <BreadCrumbs breadCrumbTitle='Admon' breadCrumbParent='Admon' />\r\n\r\n            <Card>\r\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\r\n                    <CardTitle tag='h4'>Vehículos Registrados</CardTitle>\r\n                    \r\n                    <div className='d-flex mt-md-0 mt-1'>\r\n                   \r\n                        <Button id = \"botonadmon\" className='ml-2' color='primary' onClick={handleModal}>\r\n                            <Plus size={15} />\r\n                            <span className='align-middle ml-50'>Nuevo Vehículo</span>\r\n                        </Button>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardBody >\r\n\r\n\r\n                    <DataTable\r\n                        title=\" asdasd\"\r\n                        noHeader\r\n                        highlightOnHover\r\n                        striped\r\n                        search\r\n                        style={{ overflow: \"visible\" }}\r\n                        theme='light'\r\n                        data={data1}\r\n                        columns={columns}\r\n                        className='react-dataTable'\r\n                        sortIcon={<ChevronDown size={10} />}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={() => handleModal()}\r\n                className='modal-dialog-centered'\r\n                // modalClassName={item.modalColor}\r\n                key=\"asdasd\"\r\n            >\r\n                <ModalHeader toggle={() => handleModal()}>Crear Nuevo Registro</ModalHeader>\r\n                <ModalBody>\r\n                    <FormGroup>\r\n                        <Label for='text'>Cédula:</Label>\r\n                        <Input onChange={e => setText4({ text4: e.target.value })} type='text' id='text2' placeholder='Cédula' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='text'>Placa:</Label>\r\n                        <Input onChange={e => setText5({ text5: e.target.value })} type='text' id='text3' placeholder='Placa' />\r\n                    </FormGroup>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <h6 className=\"text-danger\" id=\"mensajeError\"> {mensajeError} </h6>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button color='primary' onClick={() => handleModal()}>\r\n                                Cancelar\r\n                            </Button></Col>\r\n                        <Col>\r\n                            <Button id = \"pruebasss\" color='primary' onClick={async () => {\r\n                                CrearUnRegistro()\r\n                            }}>\r\n                                Crear\r\n                            </Button></Col>\r\n\r\n\r\n                    </Row>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <h1></h1>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default UserList\r\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {/* {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )} */}\n                {/* {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )} */}\n                {/* <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem> */}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div> */}\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}